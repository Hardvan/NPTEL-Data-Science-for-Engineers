install.packages()
install.packages(“plyr”, “dplyr”, dependencies = TRUE)
install.packages("plyr", "dplyr", dependencies = TRUE)
install.packages("plyr", "dplyr", "reshape2", "sqldf", "ggplot2", "ggmap", "GGally", "gcookbook", "scales", "lpSolve", "pracma", "SparseM", "Matrix", "MatrixModels", "visualize", "EnvStats", "rMR", "pbkrtest", "car", "alr3", "caTools", "leaps", "sampling", "mice", "pwr", "survival", "FrF2", "DoE.base", "MASS", "fitdistrplus", "car", "predictmeans", "caret", "e1071", "e1071", "mice", "caret", "party", "rpart", "rpart.plot", "tree", "MASS", "lars", "stats", "pls", "randomForest", dependencies=True)
install.packages("plyr", "dplyr", "reshape2", "sqldf", "ggplot2", "ggmap", "GGally", "gcookbook", "scales", "lpSolve", "pracma", "SparseM", "Matrix", "MatrixModels", "visualize", "EnvStats", "rMR", "pbkrtest", "car", "alr3", "caTools", "leaps", "sampling", "mice", "pwr", "survival", "FrF2", "DoE.base", "MASS", "fitdistrplus", "car", "predictmeans", "caret", "e1071", "e1071", "mice", "caret", "party", "rpart", "rpart.plot", "tree", "MASS", "lars", "stats", "pls", "randomForest", dependencies = TRUE)
install.packages("reshape2", "sqldf", "ggplot2", "ggmap", "GGally", "gcookbook", "scales", "lpSolve", "pracma", "SparseM", "Matrix", "MatrixModels", "visualize", "EnvStats", "rMR", "pbkrtest", "car", "alr3", "caTools", "leaps", "sampling", "mice", "pwr", "survival", "FrF2", "DoE.base", "MASS", "fitdistrplus", "car", "predictmeans", "caret", "e1071", "e1071", "mice", "caret", "party", "rpart", "rpart.plot", "tree", "MASS", "lars", "stats", "pls", "randomForest", dependencies = TRUE)
install.packages(c("plyr", "dplyr", "reshape2", "sqldf", "ggplot2", "ggmap", "GGally", "gcookbook", "scales", "lpSolve", "pracma", "SparseM", "Matrix", "MatrixModels", "visualize", "EnvStats", "rMR", "pbkrtest", "car", "alr3", "caTools", "leaps", "sampling", "mice", "pwr", "survival", "FrF2", "DoE.base", "MASS", "fitdistrplus", "car", "predictmeans", "caret", "e1071", "e1071", "mice", "caret", "party", "rpart", "rpart.plot", "tree", "MASS", "lars", "stats", "pls", "randomForest"))
install.packages(c("plyr", "dplyr", "reshape2", "sqldf", "ggplot2", "ggmap", "GGally", "gcookbook", "scales", "lpSolve", "pracma", "SparseM", "Matrix", "MatrixModels", "visualize", "EnvStats", "rMR", "pbkrtest", "car", "alr3", "caTools", "leaps", "sampling", "mice", "pwr", "survival", "FrF2", "DoE.base", "MASS", "fitdistrplus", "car", "predictmeans", "caret", "e1071", "e1071", "mice", "caret", "party", "rpart", "rpart.plot", "tree", "MASS", "lars", "stats", "pls", "randomForest"))
install.packages(c("plyr", "dplyr", "reshape2", "sqldf", "ggplot2", "ggmap", "GGally", "gcookbook", "scales", "lpSolve", "pracma", "SparseM", "Matrix", "MatrixModels", "visualize", "EnvStats", "rMR", "pbkrtest", "car", "alr3", "caTools", "leaps", "sampling", "mice", "pwr", "survival", "FrF2", "DoE.base", "MASS", "fitdistrplus", "car", "predictmeans", "caret", "e1071", "e1071", "mice", "caret", "party", "rpart", "rpart.plot", "tree", "MASS", "lars", "stats", "pls", "randomForest"))
install.packages(c("plyr", "dplyr", "reshape2", "sqldf", "ggplot2", "ggmap", "GGally", "gcookbook", "scales", "lpSolve", "pracma", "SparseM", "Matrix", "MatrixModels", "visualize", "EnvStats", "rMR", "pbkrtest", "car", "alr3", "caTools", "leaps", "sampling", "mice", "pwr", "survival", "FrF2", "DoE.base", "MASS", "fitdistrplus", "car", "predictmeans", "caret", "e1071", "e1071", "mice", "caret", "party", "rpart", "rpart.plot", "tree", "MASS", "lars", "stats", "pls", "randomForest"))
install.packages(c("plyr", "dplyr", "reshape2", "sqldf", "ggplot2", "ggmap", "GGally", "gcookbook", "scales", "lpSolve", "pracma", "SparseM", "Matrix", "MatrixModels", "visualize", "EnvStats", "rMR", "pbkrtest", "car", "alr3", "caTools", "leaps", "sampling", "mice", "pwr", "survival", "FrF2", "DoE.base", "MASS", "fitdistrplus", "car", "predictmeans", "caret", "e1071", "e1071", "mice", "caret", "party", "rpart", "rpart.plot", "tree", "MASS", "lars", "stats", "pls", "randomForest"))
install.packages(c("plyr", "dplyr", "reshape2", "sqldf", "ggplot2", "ggmap", "GGally", "gcookbook", "scales", "lpSolve", "pracma", "SparseM", "Matrix", "MatrixModels", "visualize", "EnvStats", "rMR", "pbkrtest", "car", "alr3", "caTools", "leaps", "sampling", "mice", "pwr", "survival", "FrF2", "DoE.base", "MASS", "fitdistrplus", "car", "predictmeans", "caret", "e1071", "e1071", "mice", "caret", "party", "rpart", "rpart.plot", "tree", "MASS", "lars", "stats", "pls", "randomForest"))
setwd("F:\NPTEL Data Science for Engineers")
setwd("F:/NPTEL Data Science for Engineers")
setwd("F:/NPTEL Data Science for Engineers")
print(c(a, b))
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
a = 11
b = a * 10
print(c(a, b))
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R", echo=TRUE)
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R", echo=TRUE)
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
print(c(a, b)) # c concatenates a, b together
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R", echo=TRUE)
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
a = 11
a = 11
a = 11
a = 11
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R", echo=TRUE)
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
rm(b)
source("F:/NPTEL Data Science for Engineers/Lec1_SampleProgram.R")
rmrm(list=ls())
rm(list=ls())
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R", encoding = 'UTF-8')
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R", encoding = 'UTF-8')
# ? Variable naming rules
# Allowed characters: alphanumeric, _, .
# Cannot start with a number
# Cannot use reserved words
# Case sensitive
# ? Predefined Constants
# Constant          |       Symbol in R
# -------------------------------------
# Pi                |       pi
# letters           |       a, b, c, …, z
# LETTERS           |       A, B, C, …, Z
# Months in a year  |       month.name, month.abb
# ? Basic Data Types
# Data Type         |       Values
# -------------------------------------
# Logical           |       TRUE, FALSE
# Integer           |       Set of all integers (Z)
# Numeric           |       Set of all real numbers
# Complex           |       Set of all complex numbers
# Character         |       Set of all character values
# Task -> Action -> Syntax/Example
# --------------------------------------------------------------
# Find data type of object -> typeof(object) or class(object) -> typeof(1.5) or class(1.5)
# Verify if object is of a particular data type -> use prefix is. before data type -> is.numeric(1.5)
# Convert object to a particular data type -> as.data.type(object) -> as.numeric(1.5)
# Note : Not all coercions are possible and if attempted will return “NA” as output
typeof(1) # double
typeof("Hello") # character
is.character("Hello") # TRUE
is.character((as.Date("2019-01-01"))) # FALSE
as.complex(1) # 1+0i
as.numeric("Hello") # NA
# ? Basic objects
# Object            |       Description
# -------------------------------------
# vector            |       Ordered collection of elements of same type
# list              |       Ordered collection of elements of different type
# data frame        |       Generic tabular object where
# ? Vectors
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R", encoding = 'UTF-8')
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R", encoding = 'UTF-8')
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R", encoding = 'UTF-8', echo=TRUE)
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R")
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R")
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R")
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R")
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R")
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R")
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R")
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R")
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R")
source("F:/NPTEL Data Science for Engineers/Lec3_Variables and datatypes_Vectors and lists.R", echo=TRUE)
